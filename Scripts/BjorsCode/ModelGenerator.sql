SELECT V.TABLE_NAME AS ViewName, T.TABLE_NAME AS TableName, V.TABLE_SCHEMA AS ViewSchema, T.TABLE_SCHEMA AS TableSchema, V.VIEW_DEFINITION, T.PrimKeys, REPLACE(REPLACE(REPLACE (T.[Description], '&lt;', '<'), '&gt;', '>'), '&#x0D;', CHAR(13)) AS Description , LEFT(T.[Filter], LEN(T.[Filter])-4) AS [Filter]
		FROM
		(	
			SELECT DB_NAME() AS TABLE_CATALOG ,
				SCHEMA_NAME(schema_id) AS TABLE_SCHEMA ,
				name AS TABLE_NAME ,
				CONVERT(NVARCHAR(MAX), OBJECT_DEFINITION(object_id)) AS VIEW_DEFINITION ,
				CONVERT(VARCHAR(7) ,
					CASE with_check_option
						WHEN 1 THEN 'CASCADE'
						ELSE 'NONE'
					END) AS CHECK_OPTION ,
			'NO' AS IS_UPDATABLE
			FROM   sys.views
		) AS V
		OUTER APPLY (
			SELECT T.TABLE_NAME, T.TABLE_SCHEMA, RIGHT(LEFT(K.PrimKeys, LEN(K.Primkeys)-1), LEN(K.Primkeys)-2) AS PrimKeys, D.[Description], '    .Where(e => '+(CHAR(13))+REPLACE(REPLACE(F.[Filter], '&amp;', '&'), '&#x0D;', CHAR(13)) AS [Filter]
				FROM INFORMATION_SCHEMA.TABLES AS T
				OUTER APPLY(				
					SELECT (
						SELECT ' '+
							CASE
								WHEN C.DATA_TYPE = 'nvarchar' THEN 'string?'
								WHEN C.DATA_TYPE = 'uniqueidentifier' THEN 'Guid?'
								WHEN C.DATA_TYPE = 'varchar' THEN 'string?'
								WHEN C.DATA_TYPE = 'nchar' THEN 'string?'
								WHEN C.DATA_TYPE = 'smallint' THEN 'short?'
								WHEN C.DATA_TYPE = 'datetime' THEN 'DateTime?'
								WHEN C.DATA_TYPE = 'datetime2' THEN 'DateTime?'
								WHEN C.DATA_TYPE = 'date' THEN 'DateTime?'
								WHEN C.DATA_TYPE = 'bit' THEN 'bool?'
								WHEN C.DATA_TYPE = 'tinyint' THEN 'byte?'
								WHEN C.DATA_TYPE = 'decimal' THEN 'decimal?'
								WHEN C.DATA_TYPE = 'float' THEN 'double?'
								WHEN C.DATA_TYPE = 'int' THEN 'int?'
							END 						
								+' '+SUBSTRING(VIEW_DEFINITION, CHARINDEX ('[', V.VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', V.VIEW_DEFINITION)+1)+1, CHARINDEX(']', VIEW_DEFINITION, CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1))-CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1)-1)+','
							FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS CU
							INNER JOIN 	INFORMATION_SCHEMA.COLUMNS AS C
								ON CU.TABLE_NAME = C.TABLE_NAME
								AND CU.TABLE_SCHEMA = C.TABLE_SCHEMA
								AND C.COLUMN_NAME = CU.COLUMN_NAME
							WHERE OBJECTPROPERTY(OBJECT_ID(CONSTRAINT_SCHEMA + '.' + QUOTENAME(CONSTRAINT_NAME)), 'IsPrimaryKey') = 1
							AND CU.TABLE_NAME = T.TABLE_NAME
							AND CU.TABLE_SCHEMA = T.TABLE_SCHEMA
							FOR XML PATH('')
					) AS PrimKeys
				) AS K
				OUTER APPLY(				
					SELECT (
						SELECT '        /// <param name="'+ SUBSTRING(VIEW_DEFINITION, CHARINDEX ('[', V.VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', V.VIEW_DEFINITION)+1)+1, CHARINDEX(']', VIEW_DEFINITION, CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1))-CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1)-1)
								+ '">Filter by '+SUBSTRING(VIEW_DEFINITION, CHARINDEX ('[', V.VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', V.VIEW_DEFINITION)+1)+1, CHARINDEX(']', VIEW_DEFINITION, CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1))-CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1)-1)+' ('+CU.COLUMN_NAME+')</param>'+CHAR(13)
							FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS CU
							WHERE OBJECTPROPERTY(OBJECT_ID(CONSTRAINT_SCHEMA + '.' + QUOTENAME(CONSTRAINT_NAME)), 'IsPrimaryKey') = 1
							AND CU.TABLE_NAME = T.TABLE_NAME
							AND CU.TABLE_SCHEMA = T.TABLE_SCHEMA
							FOR XML PATH('')
					) AS [Description]
				) AS D
				OUTER APPLY(				
					SELECT (
						SELECT '        (e.'+ +SUBSTRING(VIEW_DEFINITION, CHARINDEX ('[', V.VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', V.VIEW_DEFINITION)+1)+1, CHARINDEX(']', VIEW_DEFINITION, CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1))-CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1)-1)
								+ ' == null || e.' +SUBSTRING(VIEW_DEFINITION, CHARINDEX ('[', V.VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', V.VIEW_DEFINITION)+1)+1, CHARINDEX(']', VIEW_DEFINITION, CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1))-CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1)-1)
								+ ' == ' +SUBSTRING(VIEW_DEFINITION, CHARINDEX ('[', V.VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', V.VIEW_DEFINITION)+1)+1, CHARINDEX(']', VIEW_DEFINITION, CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1))-CHARINDEX ('[', VIEW_DEFINITION, CHARINDEX('['+CU.COLUMN_NAME+']', VIEW_DEFINITION)+1)-1)
								+ ') &&' + CHAR(13)
							FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS CU
							WHERE OBJECTPROPERTY(OBJECT_ID(CONSTRAINT_SCHEMA + '.' + QUOTENAME(CONSTRAINT_NAME)), 'IsPrimaryKey') = 1
							AND CU.TABLE_NAME = T.TABLE_NAME
							AND CU.TABLE_SCHEMA = T.TABLE_SCHEMA
							FOR XML PATH('')
					) AS [Filter]
				) AS F
				WHERE (V.VIEW_DEFINITION LIKE '%'+T.TABLE_SCHEMA+'.'+T.TABLE_NAME+'%'
				OR V.VIEW_DEFINITION LIKE '%[[]'+T.TABLE_SCHEMA+'].[[]'+T.TABLE_NAME+']%')
				AND (T.TABLE_NAME <> V.TABLE_NAME AND T.TABLE_SCHEMA <> V.TABLE_SCHEMA)
		) AS T